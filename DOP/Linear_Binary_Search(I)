#include <bits/stdc++.h>
using namespace std; 


//Функция для бинарного поиска (проверки)
int binary(int a[], int n, int x, int i){ //даем массив, размер, значение х и индекс массива
    if(i == n) 
        return -1;  // если не встретили x, возвращаем -1
    if(a[i] == x) 
        return i;  //если элемент равен то вернем индекс 

    return binary(a, n, x, ++i); //перебрать все элементы массива увеличивая индекс

    /*Можно было записать в другом виде
    int binary(int a[], int n, int x) { 
    for (int i = 0; i < n; i++)     
        if (a[i] == x)                 
            return i;                  
    return -1;                         
    }
    */
}

//Основная работа
int main(){
    //вводим данные сколько значений в 1 массиве и 2 массиве
    int n, m;
    cin >> n >> m; 

    int left = 0, right = 0; //стороны откуда отсчет (левая начало, правая конец)

    int a[n], b[m]; //объявляем 2 массива

    //вводим данные в главный массив 1
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }

    //вводим данные во второй массив 
    for(int j = 0; j < m; j++){
        cin >> b[j];

        //проходит проверка на наличие элементов второго массива в первом
        left = binary(a, n, b[j], 0) + 1; //по левой строне поиск начального вхождения
        reverse(a, a + n); //развернет массив
        right = n - binary(a, n, b[j], 0); //по правой стороне поиск последнего вхождения
        reverse(a, a + n);

        //вывод результата
        if(left == 0) 
            cout << 0 << endl; //если нет значения и вхождения
        else 
            cout << left << " " << right << endl; //1 вхождение и последнее выведет индексы
    }
}